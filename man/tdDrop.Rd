% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tdDrop.R
\name{tdDrop}
\alias{tdDrop}
\title{tdDrop}
\usage{
tdDrop(tables = "", ...)
}
\arguments{
\item{tables}{String vector of Teradata tables to drop}

\item{...}{Optional connection settings.}
}
\value{
An \code{\link{invisible}} object containing the tables dropped 
is returned.
}
\description{
Drops tables from Teradata. This code is specifically designed
for connectivity to Teradata servers using OSX at Apple using JDBC drivers
and should be updated if connected to other sources. Can take a JDBC connection
object (\code{conn}) if provided. If no JDBC connection is provided, then
a connection is attempted using the \code{user}, and \code{password} provided.
If none is provided, then tries to locate a connection object (\code{conn})
in the global environment.

If a connection profile (e.g. username, password, etc.) is provided, then
an attempt is made to connect to Teradata. Once the query is run, the
connection is then closed. If a connection object (\code{conn}) is provided
to the function (or one is found globally), then the connection remains
open.
}
\examples{
## NOT RUN ##
## Runs a quick drop query based on connection profile
# tdDrop(<tableName>, username=<username>, password=<password>, db="GCA")

## Runs query using a separately established connection
# conn = tdConn(<username>, <password>, db="GCA")
# tdDrop(<tableName>, conn=conn)

## Uses same connection, but allows code to find globally. 
# Can also drop multiple tables. 
# tdDrop(c(<table1Name>, <table2Name>))

}
\seealso{
\code{\link{tdConn}} for connection, \code{\link{tdDisk}} for disk usage,
\code{\link{tdSpool}} for spool usage, \code{\link{tdCpu}} for CPU 
usage, and \code{\link{tdJoin}} for joining tables.
}

