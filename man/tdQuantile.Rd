% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tdQuantile.R
\name{tdQuantile}
\alias{tdQuantile}
\title{tdQuantile}
\usage{
tdQuantile(table = NULL, probs = 0.5, cols = NULL, where = "", ...)
}
\arguments{
\item{table}{A string stating the Teradata table name.}

\item{probs}{Numeric vector of quantiles with values in [0,1]. Defaults to median (i.e. 0.5)}

\item{cols}{Columns desired. Defaults to all columns.}

\item{where}{Statement to subset table with.}

\item{...}{Optional connection settings.}
}
\value{
Returns a \code{\link{data.frame}} of the the Teradata table with the quantiles
specified.
}
\description{
Gets column quantiles from a Teradata table. Can take a JDBC
connection object (\code{conn}) if provided. If no JDBC connection is provided,
then a connection is attempted using the \code{user}, and \code{password}
provided. If none is provided, then tries to locate a connection object
(\code{conn}) in the global environment.

If a connection profile (e.g. username, password, etc.) is provided, then
an attempt is made to connect to Teradata. Once the query is run, the
connection is then closed. If a connection object (\code{conn}) is provided
to the function (or one is found globally), then the connection remains
open.
}
\details{
This code is CPU intensive, especially for large data tables, as it requires that 
the column values be ordered. It is advised to take care when implementing, as user 
limits may prevent the code from sucessfully running. If CPU or spool limits are 
reached, a workaround could be implemented by first breaking the data table into 
smaller subsets and subsequently taking the percentiles over them.

The code is really meant for numeric valued columns. If string columns are
provided, the code will still run. However, the results will be less interpretable.
}
\examples{
## NOT RUN (will also result in errors due to user restrictions) ##
## Runs a quick query based on connection profile
# tdQuantiles("ICDB_PERSON", username=<username>, password=<password>, db="GCA")

## Runs query using a separately established connection. Selects only two columns.
# conn = tdConn(<username>, <password>, db="GCA")
# tdQuantilesy("ICDB_PERSON", c("PERSON_ID", "INDIV_ID"), conn=conn)

## Uses same connection, but allows code to find globally. Also subsets on PERSON_ID.
# tdQuantiles("ICDB_PERSON", where="PERSON_ID mod 2 = 0")

}
\seealso{
\code{\link{tdConn}} for connection, \code{\link{tdNames}} for table names,
\code{\link{td}} for general queries, \code{\link{tdCpu}} for CPU
usage, and \code{\link{tdHead}} for top rows in table.
}

